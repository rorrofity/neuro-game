{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Timer = function Timer(_ref) {\n  var active = _ref.active,\n    onFinish = _ref.onFinish,\n    timerKey = _ref.timerKey,\n    gameFinished = _ref.gameFinished;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    time = _useState2[0],\n    setTime = _useState2[1];\n  var intervalRef = useRef(null);\n  useEffect(function () {\n    if (active) {\n      intervalRef.current = setInterval(function () {\n        setTime(function (prevTime) {\n          return prevTime + 10;\n        });\n      }, 10);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      if (!gameFinished) {\n        setTime(0);\n      }\n    }\n    return function () {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [active, gameFinished, timerKey]);\n  useEffect(function () {\n    if (!active && gameFinished) {\n      onFinish(time);\n    }\n  }, [active, gameFinished, onFinish, time]);\n  var formatTime = function formatTime(ms) {\n    var minutes = Math.floor(ms / 60000);\n    var seconds = Math.floor(ms % 60000 / 1000);\n    var hundredths = Math.floor(ms % 1000 / 10);\n    return minutes.toString().padStart(2, '0') + \":\" + seconds.toString().padStart(2, '0') + \".\" + hundredths.toString().padStart(2, '0');\n  };\n  return _jsxs(View, {\n    style: styles.timerContainer,\n    children: [_jsx(Text, {\n      style: styles.timerLabel,\n      children: \"Tiempo:\"\n    }), _jsx(Text, {\n      style: styles.timerText,\n      children: formatTime(time)\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  timerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 15,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 15,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  },\n  timerLabel: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginRight: 10\n  },\n  timerText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#4ECDC4',\n    fontFamily: 'Roboto'\n  }\n});\nexport default Timer;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","Timer","_ref","active","onFinish","timerKey","gameFinished","_useState","_useState2","_slicedToArray","time","setTime","intervalRef","current","setInterval","prevTime","clearInterval","formatTime","ms","minutes","Math","floor","seconds","hundredths","toString","padStart","style","styles","timerContainer","children","timerLabel","timerText","create","flexDirection","alignItems","padding","backgroundColor","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","fontSize","fontWeight","color","marginRight","fontFamily"],"sources":["/home/olaf/dual-task/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nconst Timer = ({ active, onFinish, timerKey, gameFinished }) => {\n  const [time, setTime] = useState(0);\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    if (active) {\n      intervalRef.current = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      if (!gameFinished) {\n        setTime(0);\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [active, gameFinished, timerKey]);\n\n  useEffect(() => {\n    if (!active && gameFinished) {\n      onFinish(time);\n    }\n  }, [active, gameFinished, onFinish, time]);\n\n  const formatTime = (ms) => {\n    const minutes = Math.floor(ms / 60000);\n    const seconds = Math.floor((ms % 60000) / 1000);\n    const hundredths = Math.floor((ms % 1000) / 10);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${hundredths.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <View style={styles.timerContainer}>\n      <Text style={styles.timerLabel}>Tiempo:</Text>\n      <Text style={styles.timerText}>{formatTime(time)}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  timerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 15,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 15,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  timerLabel: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginRight: 10,\n  },\n  timerText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#4ECDC4',\n    fontFamily: 'Roboto',\n  },\n});\n\nexport default Timer;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAG3D,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA,EAAqD;EAAA,IAA/CC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;IAAEC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;EACvD,IAAAC,SAAA,GAAwBhB,QAAQ,CAAC,CAAC,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAMI,WAAW,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAEhCD,SAAS,CAAC,YAAM;IACd,IAAIW,MAAM,EAAE;MACVS,WAAW,CAACC,OAAO,GAAGC,WAAW,CAAC,YAAM;QACtCH,OAAO,CAAC,UAACI,QAAQ;UAAA,OAAKA,QAAQ,GAAG,EAAE;QAAA,EAAC;MACtC,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,MAAM;MACL,IAAIH,WAAW,CAACC,OAAO,EAAE;QACvBG,aAAa,CAACJ,WAAW,CAACC,OAAO,CAAC;MACpC;MACA,IAAI,CAACP,YAAY,EAAE;QACjBK,OAAO,CAAC,CAAC,CAAC;MACZ;IACF;IAEA,OAAO,YAAM;MACX,IAAIC,WAAW,CAACC,OAAO,EAAE;QACvBG,aAAa,CAACJ,WAAW,CAACC,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAACV,MAAM,EAAEG,YAAY,EAAED,QAAQ,CAAC,CAAC;EAEpCb,SAAS,CAAC,YAAM;IACd,IAAI,CAACW,MAAM,IAAIG,YAAY,EAAE;MAC3BF,QAAQ,CAACM,IAAI,CAAC;IAChB;EACF,CAAC,EAAE,CAACP,MAAM,EAAEG,YAAY,EAAEF,QAAQ,EAAEM,IAAI,CAAC,CAAC;EAE1C,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAIC,EAAE,EAAK;IACzB,IAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,EAAE,GAAG,KAAK,CAAC;IACtC,IAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,EAAE,GAAG,KAAK,GAAI,IAAI,CAAC;IAC/C,IAAMK,UAAU,GAAGH,IAAI,CAACC,KAAK,CAAEH,EAAE,GAAG,IAAI,GAAI,EAAE,CAAC;IAC/C,OAAUC,OAAO,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,SAAIH,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,SAAIF,UAAU,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAChI,CAAC;EAED,OACEzB,KAAA,CAACN,IAAI;IAACgC,KAAK,EAAEC,MAAM,CAACC,cAAe;IAAAC,QAAA,GACjC/B,IAAA,CAACH,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACG,UAAW;MAAAD,QAAA,EAAC;IAAO,CAAM,CAAC,EAC9C/B,IAAA,CAACH,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACI,SAAU;MAAAF,QAAA,EAAEZ,UAAU,CAACP,IAAI;IAAC,CAAO,CAAC;EAAA,CACpD,CAAC;AAEX,CAAC;AAED,IAAMiB,MAAM,GAAG/B,UAAU,CAACoC,MAAM,CAAC;EAC/BJ,cAAc,EAAE;IACdK,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDd,UAAU,EAAE;IACVe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,MAAM;IACbC,WAAW,EAAE;EACf,CAAC;EACDjB,SAAS,EAAE;IACTc,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,SAAS;IAChBE,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAehD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}