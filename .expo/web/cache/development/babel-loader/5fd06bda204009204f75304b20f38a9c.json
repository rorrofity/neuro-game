{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Board from \"./Board\";\nimport ControlButton from \"./ControlButton\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Game = function Game() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    gameStarted = _useState2[0],\n    setGameStarted = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentArrow = _useState4[0],\n    setCurrentArrow = _useState4[1];\n  var startGame = function startGame() {\n    setGameStarted(true);\n    generateNewArrow();\n  };\n  var finishGame = function finishGame() {\n    setGameStarted(false);\n    setCurrentArrow(null);\n  };\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentPosition = _useState6[0],\n    setCurrentPosition = _useState6[1];\n  var generateNewArrow = function generateNewArrow() {\n    if (currentPosition < 16) {\n      var directions = ['Up', 'Down', 'Left', 'Right'];\n      var colors = ['#FF0000', '#00FF00', '#0000FF', '#FFFF00'];\n      var newArrow = {\n        direction: directions[Math.floor(Math.random() * directions.length)],\n        color: colors[Math.floor(Math.random() * colors.length)],\n        position: currentPosition\n      };\n      setCurrentArrow(newArrow);\n      setCurrentPosition(currentPosition + 1);\n    } else {\n      finishGame();\n    }\n  };\n  useEffect(function () {\n    if (gameStarted) {\n      generateNewArrow();\n    }\n  }, [gameStarted]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Board, {\n      currentArrow: currentArrow\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(ControlButton, {\n        title: gameStarted ? 'Finish' : 'Start',\n        onPress: gameStarted ? finishGame : startGame,\n        color: gameStarted ? '#FF6B6B' : '#4ECDC4'\n      }), gameStarted && _jsx(ControlButton, {\n        title: \"Next Arrow\",\n        onPress: generateNewArrow,\n        color: \"#45B7D1\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    marginTop: 20\n  }\n});\nexport default Game;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Dimensions","Board","ControlButton","jsx","_jsx","jsxs","_jsxs","Game","_useState","_useState2","_slicedToArray","gameStarted","setGameStarted","_useState3","_useState4","currentArrow","setCurrentArrow","startGame","generateNewArrow","finishGame","_useState5","_useState6","currentPosition","setCurrentPosition","directions","colors","newArrow","direction","Math","floor","random","length","color","position","style","styles","container","children","buttonContainer","title","onPress","create","flex","justifyContent","alignItems","padding","flexDirection","width","marginTop"],"sources":["/home/olaf/dual-task/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport Board from './Board';\nimport ControlButton from './ControlButton';\n\nconst Game = () => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentArrow, setCurrentArrow] = useState(null);\n\n  const startGame = () => {\n    setGameStarted(true);\n    generateNewArrow();\n  };\n\n  const finishGame = () => {\n    setGameStarted(false);\n    setCurrentArrow(null);\n  };\n\n  const [currentPosition, setCurrentPosition] = useState(0);\n\n  const generateNewArrow = () => {\n    if (currentPosition < 16) {\n      const directions = ['Up', 'Down', 'Left', 'Right'];\n      const colors = ['#FF0000', '#00FF00', '#0000FF', '#FFFF00'];\n      const newArrow = {\n        direction: directions[Math.floor(Math.random() * directions.length)],\n        color: colors[Math.floor(Math.random() * colors.length)],\n        position: currentPosition,\n      };\n      setCurrentArrow(newArrow);\n      setCurrentPosition(currentPosition + 1);\n    } else {\n      finishGame();\n    }\n  };\n\n  useEffect(() => {\n    if (gameStarted) {\n      generateNewArrow();\n    }\n  }, [gameStarted]);\n\n  return (\n    <View style={styles.container}>\n      <Board currentArrow={currentArrow} />\n      <View style={styles.buttonContainer}>\n        <ControlButton\n          title={gameStarted ? 'Finish' : 'Start'}\n          onPress={gameStarted ? finishGame : startGame}\n          color={gameStarted ? '#FF6B6B' : '#4ECDC4'}\n        />\n        {gameStarted && (\n          <ControlButton\n            title=\"Next Arrow\"\n            onPress={generateNewArrow}\n            color=\"#45B7D1\"\n          />\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    marginTop: 20,\n  },\n});\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}