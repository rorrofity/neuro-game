{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Board from \"./Board\";\nimport ControlButton from \"./ControlButton\";\nimport Sidebar from \"./Sidebar\";\nimport Timer from \"./Timer\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Game = function Game() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    gameStarted = _useState2[0],\n    setGameStarted = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    gameFinished = _useState4[0],\n    setGameFinished = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentArrow = _useState6[0],\n    setCurrentArrow = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    currentPosition = _useState8[0],\n    setCurrentPosition = _useState8[1];\n  var _useState9 = useState(1),\n    _useState10 = _slicedToArray(_useState9, 2),\n    currentLevel = _useState10[0],\n    setCurrentLevel = _useState10[1];\n  var _useState11 = useState(Array(16).fill({\n      direction: null,\n      color: '#E0E0E0',\n      active: false\n    })),\n    _useState12 = _slicedToArray(_useState11, 2),\n    arrows = _useState12[0],\n    setArrows = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    colorHistory = _useState14[0],\n    setColorHistory = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    timerActive = _useState16[0],\n    setTimerActive = _useState16[1];\n  var _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    finalTime = _useState18[0],\n    setFinalTime = _useState18[1];\n  var _useState19 = useState(0),\n    _useState20 = _slicedToArray(_useState19, 2),\n    timerKey = _useState20[0],\n    setTimerKey = _useState20[1];\n  var colors = ['#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FFA500'];\n  var startGame = function startGame() {\n    setGameStarted(true);\n    setGameFinished(false);\n    setCurrentPosition(0);\n    setColorHistory([]);\n    setTimerActive(false);\n    setTimerKey(function (prevKey) {\n      return prevKey + 1;\n    });\n    setArrows(generateInitialArrows());\n    setTimeout(function () {\n      return setTimerActive(true);\n    }, 0);\n    if (currentLevel === 1) {\n      generateNewArrow();\n    }\n  };\n  var finishGame = function finishGame() {\n    setGameStarted(false);\n    setGameFinished(true);\n    setCurrentArrow(null);\n    setCurrentPosition(0);\n    setArrows(Array(16).fill({\n      direction: null,\n      color: '#E0E0E0'\n    }));\n    setTimerActive(false);\n  };\n  var restartGame = function restartGame() {\n    setGameFinished(false);\n    setFinalTime(0);\n    startGame();\n  };\n  var generateInitialArrows = function generateInitialArrows() {\n    var directions = ['Up', 'Down', 'Left', 'Right'];\n    return Array(16).fill(null).map(function () {\n      return {\n        direction: directions[Math.floor(Math.random() * directions.length)],\n        color: '#E0E0E0',\n        active: false\n      };\n    });\n  };\n  var generateNewColor = function generateNewColor() {\n    var newColor;\n    do {\n      newColor = colors[Math.floor(Math.random() * colors.length)];\n    } while (colorHistory.length >= 2 && colorHistory[colorHistory.length - 1] === newColor && colorHistory[colorHistory.length - 2] === newColor);\n    var newColorHistory = [].concat(_toConsumableArray(colorHistory), [newColor]);\n    if (newColorHistory.length > 16) newColorHistory.shift();\n    setColorHistory(newColorHistory);\n    return newColor;\n  };\n  var generateNewArrow = function generateNewArrow() {\n    if (currentPosition < 16) {\n      var newColor = generateNewColor();\n      if (currentLevel === 1) {\n        var directions = ['Up', 'Down', 'Left', 'Right'];\n        var newArrow = {\n          direction: directions[Math.floor(Math.random() * directions.length)],\n          color: newColor,\n          position: currentPosition\n        };\n        setCurrentArrow(newArrow);\n      } else {\n        var newArrows = _toConsumableArray(arrows);\n        newArrows[currentPosition] = _objectSpread(_objectSpread({}, newArrows[currentPosition]), {}, {\n          color: newColor,\n          active: true\n        });\n        setArrows(newArrows);\n      }\n      setCurrentPosition(currentPosition + 1);\n    } else {\n      finishGame();\n    }\n  };\n  var handleLevelSelect = function handleLevelSelect(level) {\n    setCurrentLevel(level);\n    finishGame();\n  };\n  useEffect(function () {}, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Sidebar, {\n      currentLevel: currentLevel,\n      onLevelSelect: handleLevelSelect\n    }), _jsxs(View, {\n      style: styles.gameArea,\n      children: [_jsxs(View, {\n        style: styles.boardAndTimer,\n        children: [_jsx(Board, {\n          currentArrow: currentLevel === 1 ? currentArrow : null,\n          arrows: currentLevel === 2 ? arrows : null\n        }), _jsx(Timer, {\n          active: timerActive,\n          onFinish: setFinalTime,\n          timerKey: timerKey\n        })]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: !gameStarted && !gameFinished ? _jsx(ControlButton, {\n          title: \"Iniciar\",\n          onPress: startGame,\n          color: \"#4ECDC4\",\n          style: styles.startButton\n        }) : gameFinished ? _jsx(ControlButton, {\n          title: \"Reiniciar\",\n          onPress: restartGame,\n          color: \"#4ECDC4\",\n          style: styles.startButton\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(ControlButton, {\n            title: \"Terminar\",\n            onPress: finishGame,\n            color: \"#FF6B6B\",\n            style: styles.gameButton\n          }), _jsx(ControlButton, {\n            title: currentPosition === 16 ? \"Terminar\" : \"Siguiente Flecha\",\n            onPress: currentPosition === 16 ? finishGame : generateNewArrow,\n            color: \"#45B7D1\",\n            style: styles.gameButton\n          })]\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  gameArea: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 20\n  },\n  boardAndTimer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    marginBottom: 20,\n    maxWidth: 600\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    maxWidth: 600,\n    alignSelf: 'center',\n    paddingHorizontal: 10\n  },\n  startButton: {\n    width: '100%'\n  },\n  gameButton: {\n    flex: 1\n  }\n});\nexport default Game;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","LinearGradient","Board","ControlButton","Sidebar","Timer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Game","_useState","_useState2","_slicedToArray","gameStarted","setGameStarted","_useState3","_useState4","gameFinished","setGameFinished","_useState5","_useState6","currentArrow","setCurrentArrow","_useState7","_useState8","currentPosition","setCurrentPosition","_useState9","_useState10","currentLevel","setCurrentLevel","_useState11","Array","fill","direction","color","active","_useState12","arrows","setArrows","_useState13","_useState14","colorHistory","setColorHistory","_useState15","_useState16","timerActive","setTimerActive","_useState17","_useState18","finalTime","setFinalTime","_useState19","_useState20","timerKey","setTimerKey","colors","startGame","prevKey","generateInitialArrows","setTimeout","generateNewArrow","finishGame","restartGame","directions","map","Math","floor","random","length","generateNewColor","newColor","newColorHistory","concat","_toConsumableArray","shift","newArrow","position","newArrows","_objectSpread","handleLevelSelect","level","style","styles","container","children","onLevelSelect","gameArea","boardAndTimer","onFinish","buttonContainer","title","onPress","startButton","gameButton","create","flex","flexDirection","justifyContent","alignItems","padding","width","marginBottom","maxWidth","alignSelf","paddingHorizontal"],"sources":["/home/olaf/dual-task/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Board from './Board';\nimport ControlButton from './ControlButton';\nimport Sidebar from './Sidebar';\nimport Timer from './Timer';\n\nconst Game = () => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [currentArrow, setCurrentArrow] = useState(null);\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [arrows, setArrows] = useState(Array(16).fill({ direction: null, color: '#E0E0E0', active: false }));\n  const [colorHistory, setColorHistory] = useState([]);\n  const [timerActive, setTimerActive] = useState(false);\n  const [finalTime, setFinalTime] = useState(0);\n  const [timerKey, setTimerKey] = useState(0);\n\n  const colors = ['#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FFA500'];\n\n  const startGame = () => {\n    setGameStarted(true);\n    setGameFinished(false);\n    setCurrentPosition(0);\n    setColorHistory([]);\n    setTimerActive(false);\n    setTimerKey(prevKey => prevKey + 1);\n    setArrows(generateInitialArrows());\n    setTimeout(() => setTimerActive(true), 0);\n    if (currentLevel === 1) {\n      generateNewArrow(); // Activate the first arrow immediately for level 1\n    }\n  };\n\n  const finishGame = () => {\n    setGameStarted(false);\n    setGameFinished(true);\n    setCurrentArrow(null);\n    setCurrentPosition(0);\n    setArrows(Array(16).fill({ direction: null, color: '#E0E0E0' }));\n    setTimerActive(false);\n  };\n\n  const restartGame = () => {\n    setGameFinished(false);\n    setFinalTime(0);\n    startGame();\n  };\n\n  const generateInitialArrows = () => {\n    const directions = ['Up', 'Down', 'Left', 'Right'];\n    return Array(16).fill(null).map(() => ({\n      direction: directions[Math.floor(Math.random() * directions.length)],\n      color: '#E0E0E0',\n      active: false\n    }));\n  };\n\n  const generateNewColor = () => {\n    let newColor;\n    do {\n      newColor = colors[Math.floor(Math.random() * colors.length)];\n    } while (\n      colorHistory.length >= 2 &&\n      colorHistory[colorHistory.length - 1] === newColor &&\n      colorHistory[colorHistory.length - 2] === newColor\n    );\n\n    const newColorHistory = [...colorHistory, newColor];\n    if (newColorHistory.length > 16) newColorHistory.shift();\n    setColorHistory(newColorHistory);\n\n    return newColor;\n  };\n\n  const generateNewArrow = () => {\n    if (currentPosition < 16) {\n      const newColor = generateNewColor();\n\n      if (currentLevel === 1) {\n        const directions = ['Up', 'Down', 'Left', 'Right'];\n        const newArrow = {\n          direction: directions[Math.floor(Math.random() * directions.length)],\n          color: newColor,\n          position: currentPosition,\n        };\n        setCurrentArrow(newArrow);\n      } else {\n        const newArrows = [...arrows];\n        newArrows[currentPosition] = { ...newArrows[currentPosition], color: newColor, active: true };\n        setArrows(newArrows);\n      }\n\n      setCurrentPosition(currentPosition + 1);\n    } else {\n      finishGame();\n    }\n  };\n\n  const handleLevelSelect = (level) => {\n    setCurrentLevel(level);\n    finishGame();\n  };\n\n  useEffect(() => {\n    // Remove this effect as we no longer want to automatically finish the game\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Sidebar currentLevel={currentLevel} onLevelSelect={handleLevelSelect} />\n      <View style={styles.gameArea}>\n        <View style={styles.boardAndTimer}>\n          <Board\n            currentArrow={currentLevel === 1 ? currentArrow : null}\n            arrows={currentLevel === 2 ? arrows : null}\n          />\n          <Timer active={timerActive} onFinish={setFinalTime} timerKey={timerKey} />\n        </View>\n        <View style={styles.buttonContainer}>\n          {!gameStarted && !gameFinished ? (\n            <ControlButton\n              title=\"Iniciar\"\n              onPress={startGame}\n              color=\"#4ECDC4\"\n              style={styles.startButton}\n            />\n          ) : gameFinished ? (\n            <ControlButton\n              title=\"Reiniciar\"\n              onPress={restartGame}\n              color=\"#4ECDC4\"\n              style={styles.startButton}\n            />\n          ) : (\n            <>\n              <ControlButton\n                title=\"Terminar\"\n                onPress={finishGame}\n                color=\"#FF6B6B\"\n                style={styles.gameButton}\n              />\n              <ControlButton\n                title={currentPosition === 16 ? \"Terminar\" : \"Siguiente Flecha\"}\n                onPress={currentPosition === 16 ? finishGame : generateNewArrow}\n                color=\"#45B7D1\"\n                style={styles.gameButton}\n              />\n            </>\n          )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  gameArea: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 20,\n  },\n  boardAndTimer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    marginBottom: 20,\n    maxWidth: 600,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    maxWidth: 600,\n    alignSelf: 'center',\n    paddingHorizontal: 10, // Add padding to account for the board's padding\n  },\n  startButton: {\n    width: '100%',\n  },\n  gameButton: {\n    flex: 1,\n  },\n});\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}